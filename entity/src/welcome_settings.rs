//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "welcome_settings")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub welcome_channel: i64,
    #[sea_orm(column_type = "Text")]
    pub chat_message: String,
    #[sea_orm(column_type = "Text")]
    pub image_headline: String,
    #[sea_orm(column_type = "Text")]
    pub image_subtext: String,
    pub back_banner: i32,
    pub front_banner: i32,
    pub create_user_id: i64,
    #[sea_orm(column_type = "Text")]
    pub create_date: String,
    pub modify_user_id: Option<i64>,
    #[sea_orm(column_type = "Text", nullable)]
    pub modify_date: Option<String>,
    pub enabled: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::image::Entity",
        from = "Column::FrontBanner",
        to = "super::image::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Image2,
    #[sea_orm(
        belongs_to = "super::image::Entity",
        from = "Column::BackBanner",
        to = "super::image::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Image1,
}

impl ActiveModelBehavior for ActiveModel {}
